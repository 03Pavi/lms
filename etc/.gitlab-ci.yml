# Use the official docker image.
image: docker:latest
services:
  - name: docker:dind
    command:
      - "--insecure-registry"
      - "academic-teaching.ctdesarrollo.org:32000"

variables:
  CONTAINER_IMAGE: "${CONTAINER_REGISTRY}/academic-teaching/attendances:${CI_COMMIT_SHORT_SHA}"
  CONTAINER_IMAGE_DEV: "${CONTAINER_REGISTRY}/academic-teaching/attendances:latest"
  RELEASE_BRANCH: /^release\/\d+\.\d+\.\d+$/
  HOTFIX_BRANCH: /^hotfix\/.*/
  FEATURE_BRANCH: /^feature\/.*/
  DOCKER_HOST: tcp://docker:2375
  DOCKER_TLS_CERTDIR: ""

stages:
  - build
  - deploy


#qc analysis for hotfixes and release branches
sonarqube:
  stage: deploy
  image:
    name: sonarsource/sonar-scanner-cli:latest
    entrypoint: [ "" ]
  variables:
    SONAR_HOST_URL: ${SONAR_HOST_URL}
    SONAR_TOKEN: ${SONAR_TOKEN}
    GIT_DEPTH: "0"
  # noinspection SpellCheckingInspection
  script:
    - sonar-scanner -Dsonar.qualitygate.wait=false -Dsonar.token=$SONAR_TOKEN
  tags:
    - microk8s
    - integration-server
    - ctdesarrollo.org
  rules:
    - if: ($CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master" && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ $RELEASE_BRANCH)
    - if: ($CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master" && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ $HOTFIX_BRANCH)
    - if: ($CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main" && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ $FEATURE_BRANCH)

# develop pipelines
docker-build-develop:
 stage: build
 variables:
  CONTAINER_IMAGE: "${CONTAINER_IMAGE_DEV}"
 #set the BUILD_ENV
 before_script:
   - BUILD_ENV=develop
 script:
   - apk add bash #install bash to support all the ci-cd scripts
   - ./etc/ci-cd/build.sh .
 tags:
   - microk8s
   - integration-server
   - ctdesarrollo.org
 rules:
   - if: ($CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main" && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ $FEATURE_BRANCH && $CI_COMMIT_SHORT_SHA == "stub")

#https://microk8s.io/docs/registry-private
kubernetes-develop:
 stage: deploy
 image:
   name: bitnami/kubectl:latest
   entrypoint:
     - ''
 dependencies:
   - docker-build-develop
 variables:
  GIT_CLEAN_FLAGS: -x -f -e etc/secrets/**
  CONTAINER_IMAGE: "${CONTAINER_IMAGE_DEV}"
 #set the BUILD_ENV
 before_script:
   - BUILD_ENV=develop
 script:
   - 'echo "${KUBE_CONFIG}" > /.kube/config'
  #  - ./etc/ci-cd/decrypt-secrets.sh .
   - ./etc/ci-cd/deploy.kubectl.sh .
 tags:
   - microk8s
   - integration-server
   - ctdesarrollo.org
 rules:
   - if: ($CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "main" && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ $FEATURE_BRANCH && $CI_COMMIT_SHORT_SHA == "stub")

#releases pipelines
#install dependencies, decrypt the test .env file
docker-build-release:
  stage: build
  #set the BUILD_ENV
  before_script:
    - BUILD_ENV=release
  script:
    - apk add bash #install bash to support all the ci-cd scripts
    - ./etc/ci-cd/build.sh .
  tags:
    - microk8s
    - integration-server
    - ctdesarrollo.org
  artifacts:
    paths:
      - .env
    expire_in: "1 days"
  rules:
    - if: ($CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master" && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ $RELEASE_BRANCH)

#https://microk8s.io/docs/registry-private
kubernetes-release:
  stage: deploy
  image:
    name: bitnami/kubectl:latest
    entrypoint:
      - ''
  dependencies:
    - docker-build-release
  before_script:
    - BUILD_ENV=release
  script:
    - 'echo "${KUBE_CONFIG}" > /.kube/config'
    - ./etc/ci-cd/deploy.kubectl.sh .
  tags:
    - microk8s
    - integration-server
    - ctdesarrollo.org
  rules:
    - if: ($CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master" && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ $RELEASE_BRANCH)

#releases pipelines
#install dependencies, decrypt the test .env file
docker-build-hotfix:
  stage: build
  #set the BUILD_ENV
  before_script:
    - BUILD_ENV=master
  script:
    - apk add bash #install bash to support all the ci-cd scripts
    - ./etc/ci-cd/build.sh .
  tags:
    - microk8s
    - integration-server
    - ctdesarrollo.org
  rules:
    - if: ($CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master" && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ $HOTFIX_BRANCH)

#https://microk8s.io/docs/registry-private
kubernetes-hotfix:
  stage: deploy
  image:
    name: bitnami/kubectl:latest
    entrypoint:
      - ''
  dependencies:
    - docker-build-hotfix
  before_script:
    - BUILD_ENV=master
  script:
    - 'echo "${KUBE_CONFIG}" > /.kube/config'
    - ./etc/ci-cd/deploy.kubectl.sh .
  tags:
    - microk8s
    - integration-server
    - ctdesarrollo.org
  rules:
    - if: ($CI_MERGE_REQUEST_TARGET_BRANCH_NAME == "master" && $CI_MERGE_REQUEST_SOURCE_BRANCH_NAME =~ $HOTFIX_BRANCH)